2023-02-24 18:08:44 — INFO — Running with edr=0.7.3
2023-02-24 18:08:44 — INFO — Downloading edr internal dbt package
2023-02-24 18:08:44 — DEBUG — Running dbt deps --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:08:49 — DEBUG — Running dbt --log-format json run-operation get_adapter_type_and_unique_id --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:08:55 — DEBUG — Output: 15:08:51  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "20f5b29a-7f88-40f2-9af7-e364155b18cc", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51160, "thread": "MainThread", "ts": "2023-02-24T15:08:51.996629Z"}}
{"data": {"reason": "saved manifest not found. Starting full parse."}, "info": {"category": "", "code": "I024", "extra": {}, "invocation_id": "20f5b29a-7f88-40f2-9af7-e364155b18cc", "level": "info", "msg": "Unable to do partial parsing because saved manifest not found. Starting full parse.", "name": "UnableToPartialParse", "pid": 51160, "thread": "MainThread", "ts": "2023-02-24T15:08:52.050243Z"}}
{"data": {"msg": "Elementary: [\"bigquery\", \"disco-bedrock-375516\"]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "20f5b29a-7f88-40f2-9af7-e364155b18cc", "level": "info", "msg": "Elementary: [\"bigquery\", \"disco-bedrock-375516\"]", "name": "JinjaLogInfo", "pid": 51160, "thread": "MainThread", "ts": "2023-02-24T15:08:54.456509Z"}}

2023-02-24 18:08:55 — DEBUG — Unable to parse run-operation log message: 15:08:51  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:08:55 — DEBUG — Running dbt debug --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:09:00 — DEBUG — Running dbt --log-format json run-operation get_latest_invocation --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:09:05 — DEBUG — Output: 15:09:01  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "ed82c81d-049a-46b6-bd7c-b96a80726131", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51188, "thread": "MainThread", "ts": "2023-02-24T15:09:02.074294Z"}}
{"data": {"msg": "Elementary: [{\"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"job_id\": null, \"job_name\": null, \"job_run_id\": null, \"run_started_at\": \"2023-02-24 14:58:32\", \"run_completed_at\": \"2023-02-24 14:59:47\", \"generated_at\": \"2023-02-24 14:59:47\", \"command\": \"test\", \"dbt_version\": \"1.4.1\", \"elementary_version\": \"0.7.1\", \"full_refresh\": false, \"invocation_vars\": \"{}\", \"vars\": \"{\\\"payment_type_values\\\": [1, 2, 3, 4, 5, 6]}\", \"target_name\": \"dev\", \"target_database\": \"disco-bedrock-375516\", \"target_schema\": \"dbt\", \"target_profile_name\": \"de_zoomcamp\", \"threads\": 1.0, \"selected\": \"[]\", \"yaml_selector\": \"[]\", \"project_id\": null, \"project_name\": \"de_zoomcamp\", \"env\": null, \"env_id\": null, \"cause_category\": null, \"cause\": null, \"pull_request_id\": null, \"git_sha\": null, \"orchestrator\": null, \"dbt_user\": null}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "ed82c81d-049a-46b6-bd7c-b96a80726131", "level": "info", "msg": "Elementary: [{\"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"job_id\": null, \"job_name\": null, \"job_run_id\": null, \"run_started_at\": \"2023-02-24 14:58:32\", \"run_completed_at\": \"2023-02-24 14:59:47\", \"generated_at\": \"2023-02-24 14:59:47\", \"command\": \"test\", \"dbt_version\": \"1.4.1\", \"elementary_version\": \"0.7.1\", \"full_refresh\": false, \"invocation_vars\": \"{}\", \"vars\": \"{\\\"payment_type_values\\\": [1, 2, 3, 4, 5, 6]}\", \"target_name\": \"dev\", \"target_database\": \"disco-bedrock-375516\", \"target_schema\": \"dbt\", \"target_profile_name\": \"de_zoomcamp\", \"threads\": 1.0, \"selected\": \"[]\", \"yaml_selector\": \"[]\", \"project_id\": null, \"project_name\": \"de_zoomcamp\", \"env\": null, \"env_id\": null, \"cause_category\": null, \"cause\": null, \"pull_request_id\": null, \"git_sha\": null, \"orchestrator\": null, \"dbt_user\": null}]", "name": "JinjaLogInfo", "pid": 51188, "thread": "MainThread", "ts": "2023-02-24T15:09:04.216065Z"}}

2023-02-24 18:09:05 — DEBUG — Unable to parse run-operation log message: 15:09:01  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:09:05 — INFO — Checking compatibility between edr (0.7.3) and Elementary's dbt package (0.7.1).
2023-02-24 18:09:05 — DEBUG — Running dbt --log-format json run-operation get_elementary_database_and_schema --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:09:08 — DEBUG — Output: 15:09:06  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "b12077d4-ece1-49ba-a6f8-ec560676dc5c", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51196, "thread": "MainThread", "ts": "2023-02-24T15:09:07.145084Z"}}
{"data": {"msg": "Elementary: disco-bedrock-375516.dbt_elementary"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "b12077d4-ece1-49ba-a6f8-ec560676dc5c", "level": "info", "msg": "Elementary: disco-bedrock-375516.dbt_elementary", "name": "JinjaLogInfo", "pid": 51196, "thread": "MainThread", "ts": "2023-02-24T15:09:07.292091Z"}}

2023-02-24 18:09:08 — DEBUG — Unable to parse run-operation log message: 15:09:06  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:09:08 — INFO — Running dbt --log-format json run-operation get_models --args {"exclude_elementary": true} --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:09:13 — DEBUG — Output: 15:09:09  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "4cc40e3f-4fbb-4dc0-8200-d4b5cf3f200e", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51202, "thread": "MainThread", "ts": "2023-02-24T15:09:10.227825Z"}}
{"data": {"msg": "Elementary: [{\"name\": \"dm_monthly_zone_revenue\", \"unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dm_monthly_zone_revenue\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Aggregated table of all taxi trips corresponding to both service zones (Green and yellow) per pickup zone, month and service. The table contains monthly sums of the fare elements used to calculate the monthly revenue.  The table contains also monthly indicators like number of trips, and average trip distance. \\n\", \"full_path\": \"models/core/dm_monthly_zone_revenue.sql\"}, {\"name\": \"stg_fhv_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_fhv_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_fhv_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/stg_fhv_trip_data.sql\"}, {\"name\": \"dim_zones\", \"unique_id\": \"model.de_zoomcamp.dim_zones\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dim_zones\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"List of unique zones idefied by locationid.  Includes the service zone they correspond to (Green or yellow).\\n\", \"full_path\": \"models/core/dim_zones.sql\"}, {\"name\": \"fact_trips\", \"unique_id\": \"model.de_zoomcamp.fact_trips\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"fact_trips\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Taxi trips corresponding to both service zones (Green and yellow). The table contains records where both pickup and dropoff locations are valid and known zones.  Each record corresponds to a trip uniquely identified by tripid. \\n\", \"full_path\": \"models/core/fact_trips.sql\"}, {\"name\": \"fact_fhv_trips\", \"unique_id\": \"model.de_zoomcamp.fact_fhv_trips\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"fact_fhv_trips\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/core/fact_fhv_trips.sql\"}, {\"name\": \"stg_yellow_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Trips made by New York City's iconic yellow taxis.  Yellow taxis are the only vehicles permitted to respond to a street hail from a passenger in all five boroughs. They may also be hailed using an e-hail app like Curb or Arro. The records were collected and provided to the NYC Taxi and Limousine Commission (TLC) by technology service providers. \\n\", \"full_path\": \"models/staging/stg_yellow_trip_data.sql\"}, {\"name\": \"stg_green_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Trip made by green taxis, also known as boro taxis and street-hail liveries. Green taxis may respond to street hails,but only in the areas indicated in green on the map (i.e. above W 110 St/E 96th St in Manhattan and in the boroughs). The records were collected and provided to the NYC Taxi and Limousine Commission (TLC) by technology service providers. \\n\", \"full_path\": \"models/staging/stg_green_trip_data.sql\"}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "4cc40e3f-4fbb-4dc0-8200-d4b5cf3f200e", "level": "info", "msg": "Elementary: [{\"name\": \"dm_monthly_zone_revenue\", \"unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dm_monthly_zone_revenue\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Aggregated table of all taxi trips corresponding to both service zones (Green and yellow) per pickup zone, month and service. The table contains monthly sums of the fare elements used to calculate the monthly revenue.  The table contains also monthly indicators like number of trips, and average trip distance. \\n\", \"full_path\": \"models/core/dm_monthly_zone_revenue.sql\"}, {\"name\": \"stg_fhv_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_fhv_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_fhv_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/stg_fhv_trip_data.sql\"}, {\"name\": \"dim_zones\", \"unique_id\": \"model.de_zoomcamp.dim_zones\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dim_zones\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"List of unique zones idefied by locationid.  Includes the service zone they correspond to (Green or yellow).\\n\", \"full_path\": \"models/core/dim_zones.sql\"}, {\"name\": \"fact_trips\", \"unique_id\": \"model.de_zoomcamp.fact_trips\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"fact_trips\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Taxi trips corresponding to both service zones (Green and yellow). The table contains records where both pickup and dropoff locations are valid and known zones.  Each record corresponds to a trip uniquely identified by tripid. \\n\", \"full_path\": \"models/core/fact_trips.sql\"}, {\"name\": \"fact_fhv_trips\", \"unique_id\": \"model.de_zoomcamp.fact_fhv_trips\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"fact_fhv_trips\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/core/fact_fhv_trips.sql\"}, {\"name\": \"stg_yellow_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Trips made by New York City's iconic yellow taxis.  Yellow taxis are the only vehicles permitted to respond to a street hail from a passenger in all five boroughs. They may also be hailed using an e-hail app like Curb or Arro. The records were collected and provided to the NYC Taxi and Limousine Commission (TLC) by technology service providers. \\n\", \"full_path\": \"models/staging/stg_yellow_trip_data.sql\"}, {\"name\": \"stg_green_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Trip made by green taxis, also known as boro taxis and street-hail liveries. Green taxis may respond to street hails,but only in the areas indicated in green on the map (i.e. above W 110 St/E 96th St in Manhattan and in the boroughs). The records were collected and provided to the NYC Taxi and Limousine Commission (TLC) by technology service providers. \\n\", \"full_path\": \"models/staging/stg_green_trip_data.sql\"}]", "name": "JinjaLogInfo", "pid": 51202, "thread": "MainThread", "ts": "2023-02-24T15:09:12.334945Z"}}

2023-02-24 18:09:13 — DEBUG — Unable to parse run-operation log message: 15:09:09  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:09:13 — INFO — Running dbt --log-format json run-operation get_sources --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:09:18 — DEBUG — Output: 15:09:14  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "186debd2-5837-4674-b82e-608d1df712a0", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51215, "thread": "MainThread", "ts": "2023-02-24T15:09:15.246540Z"}}
{"data": {"msg": "Elementary: [{\"name\": \"green\", \"unique_id\": \"source.de_zoomcamp.staging.green\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"green\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}, {\"name\": \"fhv\", \"unique_id\": \"source.de_zoomcamp.staging.fhv\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"fhv\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}, {\"name\": \"yellow\", \"unique_id\": \"source.de_zoomcamp.staging.yellow\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"yellow\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "186debd2-5837-4674-b82e-608d1df712a0", "level": "info", "msg": "Elementary: [{\"name\": \"green\", \"unique_id\": \"source.de_zoomcamp.staging.green\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"green\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}, {\"name\": \"fhv\", \"unique_id\": \"source.de_zoomcamp.staging.fhv\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"fhv\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}, {\"name\": \"yellow\", \"unique_id\": \"source.de_zoomcamp.staging.yellow\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"yellow\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}]", "name": "JinjaLogInfo", "pid": 51215, "thread": "MainThread", "ts": "2023-02-24T15:09:17.301277Z"}}

2023-02-24 18:09:18 — DEBUG — Unable to parse run-operation log message: 15:09:14  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:09:18 — INFO — Running dbt --log-format json run-operation get_exposures --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:09:23 — DEBUG — Output: 15:09:19  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "304e40ee-c3f9-4d62-98c9-78b1df36785d", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51224, "thread": "MainThread", "ts": "2023-02-24T15:09:20.234176Z"}}
{"data": {"msg": "Elementary: []"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "304e40ee-c3f9-4d62-98c9-78b1df36785d", "level": "info", "msg": "Elementary: []", "name": "JinjaLogInfo", "pid": 51224, "thread": "MainThread", "ts": "2023-02-24T15:09:22.271767Z"}}

2023-02-24 18:09:23 — DEBUG — Unable to parse run-operation log message: 15:09:19  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:09:23 — INFO — Running dbt --log-format json run-operation get_models_runs --args {"days_back": 7, "exclude_elementary": true} --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:09:28 — DEBUG — Output: 15:09:24  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "54897355-b340-420a-945f-4429da4ccac0", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51231, "thread": "MainThread", "ts": "2023-02-24T15:09:25.268091Z"}}
{"data": {"msg": "Elementary: []"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "54897355-b340-420a-945f-4429da4ccac0", "level": "info", "msg": "Elementary: []", "name": "JinjaLogInfo", "pid": 51231, "thread": "MainThread", "ts": "2023-02-24T15:09:27.320669Z"}}

2023-02-24 18:09:28 — DEBUG — Unable to parse run-operation log message: 15:09:24  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:09:28 — INFO — Running dbt --log-format json run-operation get_test_results --args {"days_back": 7, "invocations_per_test": 720, "metrics_sample_limit": 5, "disable_passed_test_metrics": false} --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:09:34 — DEBUG — Output: 15:09:29  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "467b1306-e1eb-4a33-af13-76806affb556", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51241, "thread": "MainThread", "ts": "2023-02-24T15:09:30.262352Z"}}
{"data": {"msg": "Elementary: [{\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"elementary_unique_id\": \"test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9.payment_type.generic\", \"detected_at\": \"2023-02-24T14:58:36+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"payment_type\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith all_values as (\\n\\n    select\\n        payment_type as value_field,\\n        count(*) as n_records\\n\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    group by payment_type\\n\\n)\\n\\nselect *\\nfrom all_values\\nwhere value_field not in (\\n    1,2,3,4,5,6\\n)\\n\\n\\n\", \"other\": null, \"test_name\": \"accepted_values\", \"test_params\": \"{\\\"values\\\": \\\"{{ var('payment_type_values') }}\\\", \\\"quote\\\": false, \\\"column_name\\\": \\\"payment_type\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"elementary_unique_id\": \"test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad.payment_type.generic\", \"detected_at\": \"2023-02-24T14:58:39+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"payment_type\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith all_values as (\\n\\n    select\\n        payment_type as value_field,\\n        count(*) as n_records\\n\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    group by payment_type\\n\\n)\\n\\nselect *\\nfrom all_values\\nwhere value_field not in (\\n    1,2,3,4,5,6\\n)\\n\\n\\n\", \"other\": null, \"test_name\": \"accepted_values\", \"test_params\": \"{\\\"values\\\": \\\"{{ var('payment_type_values') }}\\\", \\\"quote\\\": false, \\\"column_name\\\": \\\"payment_type\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"model_unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"test_unique_id\": \"test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41.revenue_monthly_total_amount.generic\", \"detected_at\": \"2023-02-24T14:58:45+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dm_monthly_zone_revenue\", \"column_name\": \"revenue_monthly_total_amount\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect revenue_monthly_total_amount\\nfrom `disco-bedrock-375516`.`dbt`.`dm_monthly_zone_revenue`\\nwhere revenue_monthly_total_amount is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"revenue_monthly_total_amount\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('dm_monthly_zone_revenue')) }}\\\"}\", \"severity\": \"ERROR\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1.trip_id.generic\", \"detected_at\": \"2023-02-24T14:58:47+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect trip_id\\nfrom `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\nwhere trip_id is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04.trip_id.generic\", \"detected_at\": \"2023-02-24T14:58:51+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect trip_id\\nfrom `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\nwhere trip_id is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b.dropoff_location_id.generic\", \"detected_at\": \"2023-02-24T14:58:56+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"dropoff_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select dropoff_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    where dropoff_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"dropoff_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"ERROR\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c.pickup_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:00+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"pickup_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select pickup_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    where pickup_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"pickup_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337.dropoff_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:04+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"dropoff_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select dropoff_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    where dropoff_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"dropoff_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef.pickup_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:09+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"pickup_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select pickup_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    where pickup_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"pickup_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"elementary_unique_id\": \"test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184.trip_id.generic\", \"detected_at\": \"2023-02-24T14:59:15+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no duplicate values present in a field.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith dbt_test__target as (\\n\\n  select trip_id as unique_field\\n  from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n  where trip_id is not null\\n\\n)\\n\\nselect\\n    unique_field,\\n    count(*) as n_records\\n\\nfrom dbt_test__target\\ngroup by unique_field\\nhaving count(*) > 1\\n\\n\\n\", \"other\": null, \"test_name\": \"unique\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"elementary_unique_id\": \"test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af.trip_id.generic\", \"detected_at\": \"2023-02-24T14:59:20+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no duplicate values present in a field.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith dbt_test__target as (\\n\\n  select trip_id as unique_field\\n  from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n  where trip_id is not null\\n\\n)\\n\\nselect\\n    unique_field,\\n    count(*) as n_records\\n\\nfrom dbt_test__target\\ngroup by unique_field\\nhaving count(*) > 1\\n\\n\\n\", \"other\": null, \"test_name\": \"unique\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "467b1306-e1eb-4a33-af13-76806affb556", "level": "info", "msg": "Elementary: [{\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"elementary_unique_id\": \"test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9.payment_type.generic\", \"detected_at\": \"2023-02-24T14:58:36+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"payment_type\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith all_values as (\\n\\n    select\\n        payment_type as value_field,\\n        count(*) as n_records\\n\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    group by payment_type\\n\\n)\\n\\nselect *\\nfrom all_values\\nwhere value_field not in (\\n    1,2,3,4,5,6\\n)\\n\\n\\n\", \"other\": null, \"test_name\": \"accepted_values\", \"test_params\": \"{\\\"values\\\": \\\"{{ var('payment_type_values') }}\\\", \\\"quote\\\": false, \\\"column_name\\\": \\\"payment_type\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"elementary_unique_id\": \"test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad.payment_type.generic\", \"detected_at\": \"2023-02-24T14:58:39+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"payment_type\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith all_values as (\\n\\n    select\\n        payment_type as value_field,\\n        count(*) as n_records\\n\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    group by payment_type\\n\\n)\\n\\nselect *\\nfrom all_values\\nwhere value_field not in (\\n    1,2,3,4,5,6\\n)\\n\\n\\n\", \"other\": null, \"test_name\": \"accepted_values\", \"test_params\": \"{\\\"values\\\": \\\"{{ var('payment_type_values') }}\\\", \\\"quote\\\": false, \\\"column_name\\\": \\\"payment_type\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"model_unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"test_unique_id\": \"test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41.revenue_monthly_total_amount.generic\", \"detected_at\": \"2023-02-24T14:58:45+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dm_monthly_zone_revenue\", \"column_name\": \"revenue_monthly_total_amount\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect revenue_monthly_total_amount\\nfrom `disco-bedrock-375516`.`dbt`.`dm_monthly_zone_revenue`\\nwhere revenue_monthly_total_amount is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"revenue_monthly_total_amount\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('dm_monthly_zone_revenue')) }}\\\"}\", \"severity\": \"ERROR\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1.trip_id.generic\", \"detected_at\": \"2023-02-24T14:58:47+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect trip_id\\nfrom `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\nwhere trip_id is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04.trip_id.generic\", \"detected_at\": \"2023-02-24T14:58:51+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect trip_id\\nfrom `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\nwhere trip_id is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b.dropoff_location_id.generic\", \"detected_at\": \"2023-02-24T14:58:56+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"dropoff_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select dropoff_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    where dropoff_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"dropoff_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"ERROR\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c.pickup_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:00+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"pickup_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select pickup_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    where pickup_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"pickup_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337.dropoff_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:04+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"dropoff_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select dropoff_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    where dropoff_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"dropoff_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef.pickup_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:09+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"pickup_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select pickup_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    where pickup_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"pickup_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"elementary_unique_id\": \"test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184.trip_id.generic\", \"detected_at\": \"2023-02-24T14:59:15+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no duplicate values present in a field.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith dbt_test__target as (\\n\\n  select trip_id as unique_field\\n  from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n  where trip_id is not null\\n\\n)\\n\\nselect\\n    unique_field,\\n    count(*) as n_records\\n\\nfrom dbt_test__target\\ngroup by unique_field\\nhaving count(*) > 1\\n\\n\\n\", \"other\": null, \"test_name\": \"unique\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"elementary_unique_id\": \"test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af.trip_id.generic\", \"detected_at\": \"2023-02-24T14:59:20+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no duplicate values present in a field.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith dbt_test__target as (\\n\\n  select trip_id as unique_field\\n  from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n  where trip_id is not null\\n\\n)\\n\\nselect\\n    unique_field,\\n    count(*) as n_records\\n\\nfrom dbt_test__target\\ngroup by unique_field\\nhaving count(*) > 1\\n\\n\\n\", \"other\": null, \"test_name\": \"unique\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}]", "name": "JinjaLogInfo", "pid": 51241, "thread": "MainThread", "ts": "2023-02-24T15:09:33.585836Z"}}

2023-02-24 18:09:34 — DEBUG — Unable to parse run-operation log message: 15:09:29  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:09:34 — INFO — Running dbt --log-format json run-operation get_dbt_models_test_coverage --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:09:39 — DEBUG — Output: 15:09:35  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "0850acd0-8e8c-4881-bfab-2b17466b8b7c", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51248, "thread": "MainThread", "ts": "2023-02-24T15:09:36.482983Z"}}
{"data": {"msg": "Elementary: [{\"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"column_tests\": 5.0, \"table_tests\": 0.0}, {\"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"column_tests\": 5.0, \"table_tests\": 0.0}, {\"model_unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"column_tests\": 1.0, \"table_tests\": 0.0}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "0850acd0-8e8c-4881-bfab-2b17466b8b7c", "level": "info", "msg": "Elementary: [{\"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"column_tests\": 5.0, \"table_tests\": 0.0}, {\"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"column_tests\": 5.0, \"table_tests\": 0.0}, {\"model_unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"column_tests\": 1.0, \"table_tests\": 0.0}]", "name": "JinjaLogInfo", "pid": 51248, "thread": "MainThread", "ts": "2023-02-24T15:09:38.468090Z"}}

2023-02-24 18:09:39 — DEBUG — Unable to parse run-operation log message: 15:09:35  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:09:39 — INFO — Running dbt --log-format json run-operation get_nodes_depends_on_nodes --args {"exclude_elementary": true} --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:09:44 — DEBUG — Output: 15:09:40  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "9fa94bcc-f411-4c09-81f8-cc65090174ec", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51254, "thread": "MainThread", "ts": "2023-02-24T15:09:41.395151Z"}}
{"data": {"msg": "Elementary: [{\"unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.fact_trips\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_fhv_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.fhv\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.dim_zones\", \"depends_on_nodes\": \"[\\\"seed.de_zoomcamp.taxi_zone_lookup\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.fact_trips\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.stg_green_trip_data\\\", \\\"model.de_zoomcamp.stg_yellow_trip_data\\\", \\\"model.de_zoomcamp.dim_zones\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.fact_fhv_trips\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.stg_fhv_trip_data\\\", \\\"model.de_zoomcamp.dim_zones\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.yellow\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.green\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"source.de_zoomcamp.staging.green\", \"depends_on_nodes\": null, \"type\": \"source\"}, {\"unique_id\": \"source.de_zoomcamp.staging.fhv\", \"depends_on_nodes\": null, \"type\": \"source\"}, {\"unique_id\": \"source.de_zoomcamp.staging.yellow\", \"depends_on_nodes\": null, \"type\": \"source\"}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "9fa94bcc-f411-4c09-81f8-cc65090174ec", "level": "info", "msg": "Elementary: [{\"unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.fact_trips\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_fhv_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.fhv\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.dim_zones\", \"depends_on_nodes\": \"[\\\"seed.de_zoomcamp.taxi_zone_lookup\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.fact_trips\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.stg_green_trip_data\\\", \\\"model.de_zoomcamp.stg_yellow_trip_data\\\", \\\"model.de_zoomcamp.dim_zones\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.fact_fhv_trips\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.stg_fhv_trip_data\\\", \\\"model.de_zoomcamp.dim_zones\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.yellow\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.green\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"source.de_zoomcamp.staging.green\", \"depends_on_nodes\": null, \"type\": \"source\"}, {\"unique_id\": \"source.de_zoomcamp.staging.fhv\", \"depends_on_nodes\": null, \"type\": \"source\"}, {\"unique_id\": \"source.de_zoomcamp.staging.yellow\", \"depends_on_nodes\": null, \"type\": \"source\"}]", "name": "JinjaLogInfo", "pid": 51254, "thread": "MainThread", "ts": "2023-02-24T15:09:43.258056Z"}}

2023-02-24 18:09:44 — DEBUG — Unable to parse run-operation log message: 15:09:40  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:26:46 — DEBUG — Running dbt --log-format json run-operation get_adapter_type_and_unique_id --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:26:49 — DEBUG — Output: 15:26:47  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "f3830d18-a0ec-4ba2-9d5b-2165ea7d44fa", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51642, "thread": "MainThread", "ts": "2023-02-24T15:26:48.567022Z"}}
{"data": {"msg": "Elementary: [\"bigquery\", \"disco-bedrock-375516\"]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "f3830d18-a0ec-4ba2-9d5b-2165ea7d44fa", "level": "info", "msg": "Elementary: [\"bigquery\", \"disco-bedrock-375516\"]", "name": "JinjaLogInfo", "pid": 51642, "thread": "MainThread", "ts": "2023-02-24T15:26:48.752990Z"}}

2023-02-24 18:26:49 — DEBUG — Unable to parse run-operation log message: 15:26:47  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:27:41 — INFO — Running with edr=0.7.3
2023-02-24 18:29:00 — INFO — Running with edr=0.7.3
2023-02-24 18:29:00 — DEBUG — Running dbt --log-format json run-operation get_adapter_type_and_unique_id --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:29:03 — DEBUG — Output: 15:29:01  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "ea4ad702-57fa-4c89-8228-6cddcc3d5f7f", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51718, "thread": "MainThread", "ts": "2023-02-24T15:29:02.161297Z"}}
{"data": {"msg": "Elementary: [\"bigquery\", \"disco-bedrock-375516\"]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "ea4ad702-57fa-4c89-8228-6cddcc3d5f7f", "level": "info", "msg": "Elementary: [\"bigquery\", \"disco-bedrock-375516\"]", "name": "JinjaLogInfo", "pid": 51718, "thread": "MainThread", "ts": "2023-02-24T15:29:02.333836Z"}}

2023-02-24 18:29:03 — DEBUG — Unable to parse run-operation log message: 15:29:01  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:29:03 — DEBUG — Running dbt debug --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:29:08 — DEBUG — Running dbt --log-format json run-operation get_latest_invocation --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:29:13 — DEBUG — Output: 15:29:09  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "1da2ccfb-f82b-427a-8014-ac115cd591f0", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51735, "thread": "MainThread", "ts": "2023-02-24T15:29:10.481697Z"}}
{"data": {"msg": "Elementary: [{\"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"job_id\": null, \"job_name\": null, \"job_run_id\": null, \"run_started_at\": \"2023-02-24 14:58:32\", \"run_completed_at\": \"2023-02-24 14:59:47\", \"generated_at\": \"2023-02-24 14:59:47\", \"command\": \"test\", \"dbt_version\": \"1.4.1\", \"elementary_version\": \"0.7.1\", \"full_refresh\": false, \"invocation_vars\": \"{}\", \"vars\": \"{\\\"payment_type_values\\\": [1, 2, 3, 4, 5, 6]}\", \"target_name\": \"dev\", \"target_database\": \"disco-bedrock-375516\", \"target_schema\": \"dbt\", \"target_profile_name\": \"de_zoomcamp\", \"threads\": 1.0, \"selected\": \"[]\", \"yaml_selector\": \"[]\", \"project_id\": null, \"project_name\": \"de_zoomcamp\", \"env\": null, \"env_id\": null, \"cause_category\": null, \"cause\": null, \"pull_request_id\": null, \"git_sha\": null, \"orchestrator\": null, \"dbt_user\": null}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "1da2ccfb-f82b-427a-8014-ac115cd591f0", "level": "info", "msg": "Elementary: [{\"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"job_id\": null, \"job_name\": null, \"job_run_id\": null, \"run_started_at\": \"2023-02-24 14:58:32\", \"run_completed_at\": \"2023-02-24 14:59:47\", \"generated_at\": \"2023-02-24 14:59:47\", \"command\": \"test\", \"dbt_version\": \"1.4.1\", \"elementary_version\": \"0.7.1\", \"full_refresh\": false, \"invocation_vars\": \"{}\", \"vars\": \"{\\\"payment_type_values\\\": [1, 2, 3, 4, 5, 6]}\", \"target_name\": \"dev\", \"target_database\": \"disco-bedrock-375516\", \"target_schema\": \"dbt\", \"target_profile_name\": \"de_zoomcamp\", \"threads\": 1.0, \"selected\": \"[]\", \"yaml_selector\": \"[]\", \"project_id\": null, \"project_name\": \"de_zoomcamp\", \"env\": null, \"env_id\": null, \"cause_category\": null, \"cause\": null, \"pull_request_id\": null, \"git_sha\": null, \"orchestrator\": null, \"dbt_user\": null}]", "name": "JinjaLogInfo", "pid": 51735, "thread": "MainThread", "ts": "2023-02-24T15:29:12.569129Z"}}

2023-02-24 18:29:13 — DEBUG — Unable to parse run-operation log message: 15:29:09  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:29:13 — INFO — Checking compatibility between edr (0.7.3) and Elementary's dbt package (0.7.1).
2023-02-24 18:29:13 — DEBUG — Running dbt --log-format json run-operation get_elementary_database_and_schema --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:29:16 — DEBUG — Output: 15:29:14  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "f2e5c320-1f34-4e34-a7e0-03efb8a960dc", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51747, "thread": "MainThread", "ts": "2023-02-24T15:29:15.448795Z"}}
{"data": {"msg": "Elementary: disco-bedrock-375516.dbt_elementary"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "f2e5c320-1f34-4e34-a7e0-03efb8a960dc", "level": "info", "msg": "Elementary: disco-bedrock-375516.dbt_elementary", "name": "JinjaLogInfo", "pid": 51747, "thread": "MainThread", "ts": "2023-02-24T15:29:15.592334Z"}}

2023-02-24 18:29:16 — DEBUG — Unable to parse run-operation log message: 15:29:14  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:29:46 — INFO — Running with edr=0.7.3
2023-02-24 18:29:46 — DEBUG — Running dbt --log-format json run-operation get_adapter_type_and_unique_id --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:29:49 — DEBUG — Output: 15:29:47  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "2cba5be5-1e0a-4df4-8941-28e0e01c1d7b", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51773, "thread": "MainThread", "ts": "2023-02-24T15:29:48.259031Z"}}
{"data": {"msg": "Elementary: [\"bigquery\", \"disco-bedrock-375516\"]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "2cba5be5-1e0a-4df4-8941-28e0e01c1d7b", "level": "info", "msg": "Elementary: [\"bigquery\", \"disco-bedrock-375516\"]", "name": "JinjaLogInfo", "pid": 51773, "thread": "MainThread", "ts": "2023-02-24T15:29:48.433587Z"}}

2023-02-24 18:29:49 — DEBUG — Unable to parse run-operation log message: 15:29:47  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:29:49 — DEBUG — Running dbt debug --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:29:53 — DEBUG — Running dbt --log-format json run-operation get_latest_invocation --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:29:58 — DEBUG — Output: 15:29:55  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "5a0661b0-5f32-4ff6-a9a4-a063fb229c16", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51789, "thread": "MainThread", "ts": "2023-02-24T15:29:55.904249Z"}}
{"data": {"msg": "Elementary: [{\"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"job_id\": null, \"job_name\": null, \"job_run_id\": null, \"run_started_at\": \"2023-02-24 14:58:32\", \"run_completed_at\": \"2023-02-24 14:59:47\", \"generated_at\": \"2023-02-24 14:59:47\", \"command\": \"test\", \"dbt_version\": \"1.4.1\", \"elementary_version\": \"0.7.1\", \"full_refresh\": false, \"invocation_vars\": \"{}\", \"vars\": \"{\\\"payment_type_values\\\": [1, 2, 3, 4, 5, 6]}\", \"target_name\": \"dev\", \"target_database\": \"disco-bedrock-375516\", \"target_schema\": \"dbt\", \"target_profile_name\": \"de_zoomcamp\", \"threads\": 1.0, \"selected\": \"[]\", \"yaml_selector\": \"[]\", \"project_id\": null, \"project_name\": \"de_zoomcamp\", \"env\": null, \"env_id\": null, \"cause_category\": null, \"cause\": null, \"pull_request_id\": null, \"git_sha\": null, \"orchestrator\": null, \"dbt_user\": null}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "5a0661b0-5f32-4ff6-a9a4-a063fb229c16", "level": "info", "msg": "Elementary: [{\"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"job_id\": null, \"job_name\": null, \"job_run_id\": null, \"run_started_at\": \"2023-02-24 14:58:32\", \"run_completed_at\": \"2023-02-24 14:59:47\", \"generated_at\": \"2023-02-24 14:59:47\", \"command\": \"test\", \"dbt_version\": \"1.4.1\", \"elementary_version\": \"0.7.1\", \"full_refresh\": false, \"invocation_vars\": \"{}\", \"vars\": \"{\\\"payment_type_values\\\": [1, 2, 3, 4, 5, 6]}\", \"target_name\": \"dev\", \"target_database\": \"disco-bedrock-375516\", \"target_schema\": \"dbt\", \"target_profile_name\": \"de_zoomcamp\", \"threads\": 1.0, \"selected\": \"[]\", \"yaml_selector\": \"[]\", \"project_id\": null, \"project_name\": \"de_zoomcamp\", \"env\": null, \"env_id\": null, \"cause_category\": null, \"cause\": null, \"pull_request_id\": null, \"git_sha\": null, \"orchestrator\": null, \"dbt_user\": null}]", "name": "JinjaLogInfo", "pid": 51789, "thread": "MainThread", "ts": "2023-02-24T15:29:57.993543Z"}}

2023-02-24 18:29:58 — DEBUG — Unable to parse run-operation log message: 15:29:55  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:29:58 — INFO — Checking compatibility between edr (0.7.3) and Elementary's dbt package (0.7.1).
2023-02-24 18:29:58 — DEBUG — Running dbt --log-format json run-operation get_elementary_database_and_schema --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:30:06 — DEBUG — Output: 15:30:00  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "aa74bb62-d67b-41e7-85a3-b7a550f9a56d", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51798, "thread": "MainThread", "ts": "2023-02-24T15:30:00.949577Z"}}
{"data": {"msg": "Elementary: disco-bedrock-375516.dbt_elementary"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "aa74bb62-d67b-41e7-85a3-b7a550f9a56d", "level": "info", "msg": "Elementary: disco-bedrock-375516.dbt_elementary", "name": "JinjaLogInfo", "pid": 51798, "thread": "MainThread", "ts": "2023-02-24T15:30:01.099533Z"}}

2023-02-24 18:30:06 — DEBUG — Unable to parse run-operation log message: 15:30:00  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:30:52 — INFO — Running with edr=0.7.3
2023-02-24 18:30:52 — DEBUG — Running dbt --log-format json run-operation get_adapter_type_and_unique_id --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:30:56 — DEBUG — Output: 15:30:54  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "a7155b52-139d-4eae-9efd-deaec727f6b3", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51834, "thread": "MainThread", "ts": "2023-02-24T15:30:54.852292Z"}}
{"data": {"msg": "Elementary: [\"bigquery\", \"disco-bedrock-375516\"]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "a7155b52-139d-4eae-9efd-deaec727f6b3", "level": "info", "msg": "Elementary: [\"bigquery\", \"disco-bedrock-375516\"]", "name": "JinjaLogInfo", "pid": 51834, "thread": "MainThread", "ts": "2023-02-24T15:30:55.047781Z"}}

2023-02-24 18:30:56 — DEBUG — Unable to parse run-operation log message: 15:30:54  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:30:56 — DEBUG — Running dbt debug --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:31:00 — DEBUG — Running dbt --log-format json run-operation get_latest_invocation --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:31:05 — DEBUG — Output: 15:31:01  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "af3a68d6-c1c1-4bd8-b928-4b7f07afb9d6", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51857, "thread": "MainThread", "ts": "2023-02-24T15:31:02.519007Z"}}
{"data": {"msg": "Elementary: [{\"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"job_id\": null, \"job_name\": null, \"job_run_id\": null, \"run_started_at\": \"2023-02-24 14:58:32\", \"run_completed_at\": \"2023-02-24 14:59:47\", \"generated_at\": \"2023-02-24 14:59:47\", \"command\": \"test\", \"dbt_version\": \"1.4.1\", \"elementary_version\": \"0.7.1\", \"full_refresh\": false, \"invocation_vars\": \"{}\", \"vars\": \"{\\\"payment_type_values\\\": [1, 2, 3, 4, 5, 6]}\", \"target_name\": \"dev\", \"target_database\": \"disco-bedrock-375516\", \"target_schema\": \"dbt\", \"target_profile_name\": \"de_zoomcamp\", \"threads\": 1.0, \"selected\": \"[]\", \"yaml_selector\": \"[]\", \"project_id\": null, \"project_name\": \"de_zoomcamp\", \"env\": null, \"env_id\": null, \"cause_category\": null, \"cause\": null, \"pull_request_id\": null, \"git_sha\": null, \"orchestrator\": null, \"dbt_user\": null}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "af3a68d6-c1c1-4bd8-b928-4b7f07afb9d6", "level": "info", "msg": "Elementary: [{\"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"job_id\": null, \"job_name\": null, \"job_run_id\": null, \"run_started_at\": \"2023-02-24 14:58:32\", \"run_completed_at\": \"2023-02-24 14:59:47\", \"generated_at\": \"2023-02-24 14:59:47\", \"command\": \"test\", \"dbt_version\": \"1.4.1\", \"elementary_version\": \"0.7.1\", \"full_refresh\": false, \"invocation_vars\": \"{}\", \"vars\": \"{\\\"payment_type_values\\\": [1, 2, 3, 4, 5, 6]}\", \"target_name\": \"dev\", \"target_database\": \"disco-bedrock-375516\", \"target_schema\": \"dbt\", \"target_profile_name\": \"de_zoomcamp\", \"threads\": 1.0, \"selected\": \"[]\", \"yaml_selector\": \"[]\", \"project_id\": null, \"project_name\": \"de_zoomcamp\", \"env\": null, \"env_id\": null, \"cause_category\": null, \"cause\": null, \"pull_request_id\": null, \"git_sha\": null, \"orchestrator\": null, \"dbt_user\": null}]", "name": "JinjaLogInfo", "pid": 51857, "thread": "MainThread", "ts": "2023-02-24T15:31:04.508666Z"}}

2023-02-24 18:31:05 — DEBUG — Unable to parse run-operation log message: 15:31:01  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:31:05 — INFO — Checking compatibility between edr (0.7.3) and Elementary's dbt package (0.7.1).
2023-02-24 18:31:05 — DEBUG — Running dbt --log-format json run-operation get_elementary_database_and_schema --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:31:08 — DEBUG — Output: 15:31:06  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "86874a58-a962-497d-9246-56d18fa052ce", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51865, "thread": "MainThread", "ts": "2023-02-24T15:31:07.425961Z"}}
{"data": {"msg": "Elementary: disco-bedrock-375516.dbt_elementary"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "86874a58-a962-497d-9246-56d18fa052ce", "level": "info", "msg": "Elementary: disco-bedrock-375516.dbt_elementary", "name": "JinjaLogInfo", "pid": 51865, "thread": "MainThread", "ts": "2023-02-24T15:31:07.570653Z"}}

2023-02-24 18:31:08 — DEBUG — Unable to parse run-operation log message: 15:31:06  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:31:08 — INFO — Running dbt --log-format json run-operation get_models --args {"exclude_elementary": true} --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:31:13 — DEBUG — Output: 15:31:09  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "4fb8aa26-816e-4a1b-b4fd-9b115de1dae9", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51871, "thread": "MainThread", "ts": "2023-02-24T15:31:10.495273Z"}}
{"data": {"msg": "Elementary: [{\"name\": \"dm_monthly_zone_revenue\", \"unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dm_monthly_zone_revenue\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Aggregated table of all taxi trips corresponding to both service zones (Green and yellow) per pickup zone, month and service. The table contains monthly sums of the fare elements used to calculate the monthly revenue.  The table contains also monthly indicators like number of trips, and average trip distance. \\n\", \"full_path\": \"models/core/dm_monthly_zone_revenue.sql\"}, {\"name\": \"stg_fhv_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_fhv_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_fhv_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/stg_fhv_trip_data.sql\"}, {\"name\": \"dim_zones\", \"unique_id\": \"model.de_zoomcamp.dim_zones\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dim_zones\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"List of unique zones idefied by locationid.  Includes the service zone they correspond to (Green or yellow).\\n\", \"full_path\": \"models/core/dim_zones.sql\"}, {\"name\": \"fact_trips\", \"unique_id\": \"model.de_zoomcamp.fact_trips\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"fact_trips\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Taxi trips corresponding to both service zones (Green and yellow). The table contains records where both pickup and dropoff locations are valid and known zones.  Each record corresponds to a trip uniquely identified by tripid. \\n\", \"full_path\": \"models/core/fact_trips.sql\"}, {\"name\": \"fact_fhv_trips\", \"unique_id\": \"model.de_zoomcamp.fact_fhv_trips\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"fact_fhv_trips\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/core/fact_fhv_trips.sql\"}, {\"name\": \"stg_yellow_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Trips made by New York City's iconic yellow taxis.  Yellow taxis are the only vehicles permitted to respond to a street hail from a passenger in all five boroughs. They may also be hailed using an e-hail app like Curb or Arro. The records were collected and provided to the NYC Taxi and Limousine Commission (TLC) by technology service providers. \\n\", \"full_path\": \"models/staging/stg_yellow_trip_data.sql\"}, {\"name\": \"stg_green_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Trip made by green taxis, also known as boro taxis and street-hail liveries. Green taxis may respond to street hails,but only in the areas indicated in green on the map (i.e. above W 110 St/E 96th St in Manhattan and in the boroughs). The records were collected and provided to the NYC Taxi and Limousine Commission (TLC) by technology service providers. \\n\", \"full_path\": \"models/staging/stg_green_trip_data.sql\"}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "4fb8aa26-816e-4a1b-b4fd-9b115de1dae9", "level": "info", "msg": "Elementary: [{\"name\": \"dm_monthly_zone_revenue\", \"unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dm_monthly_zone_revenue\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Aggregated table of all taxi trips corresponding to both service zones (Green and yellow) per pickup zone, month and service. The table contains monthly sums of the fare elements used to calculate the monthly revenue.  The table contains also monthly indicators like number of trips, and average trip distance. \\n\", \"full_path\": \"models/core/dm_monthly_zone_revenue.sql\"}, {\"name\": \"stg_fhv_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_fhv_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_fhv_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/stg_fhv_trip_data.sql\"}, {\"name\": \"dim_zones\", \"unique_id\": \"model.de_zoomcamp.dim_zones\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dim_zones\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"List of unique zones idefied by locationid.  Includes the service zone they correspond to (Green or yellow).\\n\", \"full_path\": \"models/core/dim_zones.sql\"}, {\"name\": \"fact_trips\", \"unique_id\": \"model.de_zoomcamp.fact_trips\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"fact_trips\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Taxi trips corresponding to both service zones (Green and yellow). The table contains records where both pickup and dropoff locations are valid and known zones.  Each record corresponds to a trip uniquely identified by tripid. \\n\", \"full_path\": \"models/core/fact_trips.sql\"}, {\"name\": \"fact_fhv_trips\", \"unique_id\": \"model.de_zoomcamp.fact_fhv_trips\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"fact_fhv_trips\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/core/fact_fhv_trips.sql\"}, {\"name\": \"stg_yellow_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Trips made by New York City's iconic yellow taxis.  Yellow taxis are the only vehicles permitted to respond to a street hail from a passenger in all five boroughs. They may also be hailed using an e-hail app like Curb or Arro. The records were collected and provided to the NYC Taxi and Limousine Commission (TLC) by technology service providers. \\n\", \"full_path\": \"models/staging/stg_yellow_trip_data.sql\"}, {\"name\": \"stg_green_trip_data\", \"unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"owners\": \"[]\", \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"Trip made by green taxis, also known as boro taxis and street-hail liveries. Green taxis may respond to street hails,but only in the areas indicated in green on the map (i.e. above W 110 St/E 96th St in Manhattan and in the boroughs). The records were collected and provided to the NYC Taxi and Limousine Commission (TLC) by technology service providers. \\n\", \"full_path\": \"models/staging/stg_green_trip_data.sql\"}]", "name": "JinjaLogInfo", "pid": 51871, "thread": "MainThread", "ts": "2023-02-24T15:31:12.466480Z"}}

2023-02-24 18:31:13 — DEBUG — Unable to parse run-operation log message: 15:31:09  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:31:13 — INFO — Running dbt --log-format json run-operation get_sources --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:31:18 — DEBUG — Output: 15:31:14  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "58b6de49-aa63-434b-ad6a-18987f35faf2", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51883, "thread": "MainThread", "ts": "2023-02-24T15:31:15.355252Z"}}
{"data": {"msg": "Elementary: [{\"name\": \"green\", \"unique_id\": \"source.de_zoomcamp.staging.green\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"green\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}, {\"name\": \"fhv\", \"unique_id\": \"source.de_zoomcamp.staging.fhv\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"fhv\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}, {\"name\": \"yellow\", \"unique_id\": \"source.de_zoomcamp.staging.yellow\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"yellow\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "58b6de49-aa63-434b-ad6a-18987f35faf2", "level": "info", "msg": "Elementary: [{\"name\": \"green\", \"unique_id\": \"source.de_zoomcamp.staging.green\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"green\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}, {\"name\": \"fhv\", \"unique_id\": \"source.de_zoomcamp.staging.fhv\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"fhv\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}, {\"name\": \"yellow\", \"unique_id\": \"source.de_zoomcamp.staging.yellow\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"trips_data_all\", \"table_name\": \"yellow\", \"owners\": null, \"tags\": \"[]\", \"package_name\": \"de_zoomcamp\", \"description\": \"\", \"full_path\": \"models/staging/schema.yaml\"}]", "name": "JinjaLogInfo", "pid": 51883, "thread": "MainThread", "ts": "2023-02-24T15:31:17.295787Z"}}

2023-02-24 18:31:18 — DEBUG — Unable to parse run-operation log message: 15:31:14  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:31:18 — INFO — Running dbt --log-format json run-operation get_exposures --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:31:23 — DEBUG — Output: 15:31:19  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "203bdfea-e0a9-47f4-ac4f-aca42a9e3236", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51889, "thread": "MainThread", "ts": "2023-02-24T15:31:20.157346Z"}}
{"data": {"msg": "Elementary: []"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "203bdfea-e0a9-47f4-ac4f-aca42a9e3236", "level": "info", "msg": "Elementary: []", "name": "JinjaLogInfo", "pid": 51889, "thread": "MainThread", "ts": "2023-02-24T15:31:22.138486Z"}}

2023-02-24 18:31:23 — DEBUG — Unable to parse run-operation log message: 15:31:19  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:31:23 — INFO — Running dbt --log-format json run-operation get_models_runs --args {"days_back": 7, "exclude_elementary": true} --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:31:28 — DEBUG — Output: 15:31:24  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "0a6b4c75-258d-4424-888c-20fc949facda", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51895, "thread": "MainThread", "ts": "2023-02-24T15:31:25.062098Z"}}
{"data": {"msg": "Elementary: []"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "0a6b4c75-258d-4424-888c-20fc949facda", "level": "info", "msg": "Elementary: []", "name": "JinjaLogInfo", "pid": 51895, "thread": "MainThread", "ts": "2023-02-24T15:31:27.046193Z"}}

2023-02-24 18:31:28 — DEBUG — Unable to parse run-operation log message: 15:31:24  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:31:28 — INFO — Running dbt --log-format json run-operation get_test_results --args {"days_back": 7, "invocations_per_test": 720, "metrics_sample_limit": 5, "disable_passed_test_metrics": false} --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:31:34 — DEBUG — Output: 15:31:29  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "d2bf843c-1430-4b70-8d10-2f7bdfc90a41", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51902, "thread": "MainThread", "ts": "2023-02-24T15:31:29.973975Z"}}
{"data": {"msg": "Elementary: [{\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"elementary_unique_id\": \"test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9.payment_type.generic\", \"detected_at\": \"2023-02-24T14:58:36+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"payment_type\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith all_values as (\\n\\n    select\\n        payment_type as value_field,\\n        count(*) as n_records\\n\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    group by payment_type\\n\\n)\\n\\nselect *\\nfrom all_values\\nwhere value_field not in (\\n    1,2,3,4,5,6\\n)\\n\\n\\n\", \"other\": null, \"test_name\": \"accepted_values\", \"test_params\": \"{\\\"values\\\": \\\"{{ var('payment_type_values') }}\\\", \\\"quote\\\": false, \\\"column_name\\\": \\\"payment_type\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"elementary_unique_id\": \"test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad.payment_type.generic\", \"detected_at\": \"2023-02-24T14:58:39+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"payment_type\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith all_values as (\\n\\n    select\\n        payment_type as value_field,\\n        count(*) as n_records\\n\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    group by payment_type\\n\\n)\\n\\nselect *\\nfrom all_values\\nwhere value_field not in (\\n    1,2,3,4,5,6\\n)\\n\\n\\n\", \"other\": null, \"test_name\": \"accepted_values\", \"test_params\": \"{\\\"values\\\": \\\"{{ var('payment_type_values') }}\\\", \\\"quote\\\": false, \\\"column_name\\\": \\\"payment_type\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"model_unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"test_unique_id\": \"test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41.revenue_monthly_total_amount.generic\", \"detected_at\": \"2023-02-24T14:58:45+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dm_monthly_zone_revenue\", \"column_name\": \"revenue_monthly_total_amount\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect revenue_monthly_total_amount\\nfrom `disco-bedrock-375516`.`dbt`.`dm_monthly_zone_revenue`\\nwhere revenue_monthly_total_amount is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"revenue_monthly_total_amount\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('dm_monthly_zone_revenue')) }}\\\"}\", \"severity\": \"ERROR\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1.trip_id.generic\", \"detected_at\": \"2023-02-24T14:58:47+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect trip_id\\nfrom `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\nwhere trip_id is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04.trip_id.generic\", \"detected_at\": \"2023-02-24T14:58:51+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect trip_id\\nfrom `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\nwhere trip_id is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b.dropoff_location_id.generic\", \"detected_at\": \"2023-02-24T14:58:56+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"dropoff_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select dropoff_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    where dropoff_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"dropoff_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"ERROR\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c.pickup_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:00+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"pickup_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select pickup_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    where pickup_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"pickup_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337.dropoff_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:04+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"dropoff_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select dropoff_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    where dropoff_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"dropoff_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef.pickup_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:09+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"pickup_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select pickup_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    where pickup_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"pickup_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"elementary_unique_id\": \"test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184.trip_id.generic\", \"detected_at\": \"2023-02-24T14:59:15+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no duplicate values present in a field.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith dbt_test__target as (\\n\\n  select trip_id as unique_field\\n  from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n  where trip_id is not null\\n\\n)\\n\\nselect\\n    unique_field,\\n    count(*) as n_records\\n\\nfrom dbt_test__target\\ngroup by unique_field\\nhaving count(*) > 1\\n\\n\\n\", \"other\": null, \"test_name\": \"unique\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"elementary_unique_id\": \"test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af.trip_id.generic\", \"detected_at\": \"2023-02-24T14:59:20+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no duplicate values present in a field.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith dbt_test__target as (\\n\\n  select trip_id as unique_field\\n  from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n  where trip_id is not null\\n\\n)\\n\\nselect\\n    unique_field,\\n    count(*) as n_records\\n\\nfrom dbt_test__target\\ngroup by unique_field\\nhaving count(*) > 1\\n\\n\\n\", \"other\": null, \"test_name\": \"unique\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "d2bf843c-1430-4b70-8d10-2f7bdfc90a41", "level": "info", "msg": "Elementary: [{\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9\", \"elementary_unique_id\": \"test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9.payment_type.generic\", \"detected_at\": \"2023-02-24T14:58:36+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"payment_type\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith all_values as (\\n\\n    select\\n        payment_type as value_field,\\n        count(*) as n_records\\n\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    group by payment_type\\n\\n)\\n\\nselect *\\nfrom all_values\\nwhere value_field not in (\\n    1,2,3,4,5,6\\n)\\n\\n\\n\", \"other\": null, \"test_name\": \"accepted_values\", \"test_params\": \"{\\\"values\\\": \\\"{{ var('payment_type_values') }}\\\", \\\"quote\\\": false, \\\"column_name\\\": \\\"payment_type\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad\", \"elementary_unique_id\": \"test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad.payment_type.generic\", \"detected_at\": \"2023-02-24T14:58:39+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"payment_type\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith all_values as (\\n\\n    select\\n        payment_type as value_field,\\n        count(*) as n_records\\n\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    group by payment_type\\n\\n)\\n\\nselect *\\nfrom all_values\\nwhere value_field not in (\\n    1,2,3,4,5,6\\n)\\n\\n\\n\", \"other\": null, \"test_name\": \"accepted_values\", \"test_params\": \"{\\\"values\\\": \\\"{{ var('payment_type_values') }}\\\", \\\"quote\\\": false, \\\"column_name\\\": \\\"payment_type\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"model_unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"test_unique_id\": \"test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41.revenue_monthly_total_amount.generic\", \"detected_at\": \"2023-02-24T14:58:45+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"dm_monthly_zone_revenue\", \"column_name\": \"revenue_monthly_total_amount\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect revenue_monthly_total_amount\\nfrom `disco-bedrock-375516`.`dbt`.`dm_monthly_zone_revenue`\\nwhere revenue_monthly_total_amount is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"revenue_monthly_total_amount\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('dm_monthly_zone_revenue')) }}\\\"}\", \"severity\": \"ERROR\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1.trip_id.generic\", \"detected_at\": \"2023-02-24T14:58:47+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect trip_id\\nfrom `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\nwhere trip_id is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04\", \"elementary_unique_id\": \"test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04.trip_id.generic\", \"detected_at\": \"2023-02-24T14:58:51+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no `null` values present in a column.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\n\\n\\nselect trip_id\\nfrom `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\nwhere trip_id is null\\n\\n\\n\", \"other\": null, \"test_name\": \"not_null\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b.dropoff_location_id.generic\", \"detected_at\": \"2023-02-24T14:58:56+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"dropoff_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select dropoff_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    where dropoff_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"dropoff_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"ERROR\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c.pickup_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:00+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"pickup_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select pickup_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n    where pickup_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"pickup_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337.dropoff_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:04+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"dropoff_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select dropoff_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    where dropoff_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"dropoff_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef\", \"elementary_unique_id\": \"test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef.pickup_location_id.generic\", \"detected_at\": \"2023-02-24T14:59:09+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"pickup_location_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \\\\\\\"referential integrity\\\\\\\".\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith child as (\\n    select pickup_location_id as from_field\\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n    where pickup_location_id is not null\\n),\\n\\nparent as (\\n    select location_id as to_field\\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\\n)\\n\\nselect\\n    from_field\\n\\nfrom child\\nleft join parent\\n    on child.from_field = parent.to_field\\n\\nwhere parent.to_field is null\\n\\n\\n\", \"other\": null, \"test_name\": \"relationships\", \"test_params\": \"{\\\"to\\\": \\\"ref('taxi_zone_lookup')\\\", \\\"field\\\": \\\"location_id\\\", \\\"column_name\\\": \\\"pickup_location_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"warn\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184\", \"elementary_unique_id\": \"test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184.trip_id.generic\", \"detected_at\": \"2023-02-24T14:59:15+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_green_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no duplicate values present in a field.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith dbt_test__target as (\\n\\n  select trip_id as unique_field\\n  from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\\n  where trip_id is not null\\n\\n)\\n\\nselect\\n    unique_field,\\n    count(*) as n_records\\n\\nfrom dbt_test__target\\ngroup by unique_field\\nhaving count(*) > 1\\n\\n\\n\", \"other\": null, \"test_name\": \"unique\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_green_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}, {\"id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"invocation_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8\", \"test_execution_id\": \"796a1cfd-e639-48e0-8d02-933e514fa5e8.test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"test_unique_id\": \"test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af\", \"elementary_unique_id\": \"test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af.trip_id.generic\", \"detected_at\": \"2023-02-24T14:59:20+00:00\", \"database_name\": \"disco-bedrock-375516\", \"schema_name\": \"dbt\", \"table_name\": \"stg_yellow_trip_data\", \"column_name\": \"trip_id\", \"test_type\": \"dbt_test\", \"test_sub_type\": \"generic\", \"test_results_description\": null, \"owners\": \"[]\", \"model_owner\": \"[]\", \"tags\": \"[]\", \"model_tags\": \"[]\", \"meta\": \"{\\\"description\\\": \\\"This test validates that there are no duplicate values present in a field.\\\"}\", \"model_meta\": \"{}\", \"test_results_query\": \"\\n    \\n    \\n\\nwith dbt_test__target as (\\n\\n  select trip_id as unique_field\\n  from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\\n  where trip_id is not null\\n\\n)\\n\\nselect\\n    unique_field,\\n    count(*) as n_records\\n\\nfrom dbt_test__target\\ngroup by unique_field\\nhaving count(*) > 1\\n\\n\\n\", \"other\": null, \"test_name\": \"unique\", \"test_params\": \"{\\\"column_name\\\": \\\"trip_id\\\", \\\"model\\\": \\\"{{ get_where_subquery(ref('stg_yellow_trip_data')) }}\\\"}\", \"severity\": \"WARN\", \"status\": \"pass\", \"days_diff\": 0.0, \"invocations_rank_index\": 1.0, \"failures\": 0.0, \"result_rows\": null, \"sample_data\": null}]", "name": "JinjaLogInfo", "pid": 51902, "thread": "MainThread", "ts": "2023-02-24T15:31:33.296445Z"}}

2023-02-24 18:31:34 — DEBUG — Unable to parse run-operation log message: 15:31:29  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:31:34 — INFO — Running dbt --log-format json run-operation get_dbt_models_test_coverage --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:31:39 — DEBUG — Output: 15:31:35  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "a5b19ab0-6dc6-4495-be22-b5d18f073f2e", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51908, "thread": "MainThread", "ts": "2023-02-24T15:31:36.251432Z"}}
{"data": {"msg": "Elementary: [{\"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"column_tests\": 5.0, \"table_tests\": 0.0}, {\"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"column_tests\": 5.0, \"table_tests\": 0.0}, {\"model_unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"column_tests\": 1.0, \"table_tests\": 0.0}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "a5b19ab0-6dc6-4495-be22-b5d18f073f2e", "level": "info", "msg": "Elementary: [{\"model_unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"column_tests\": 5.0, \"table_tests\": 0.0}, {\"model_unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"column_tests\": 5.0, \"table_tests\": 0.0}, {\"model_unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"column_tests\": 1.0, \"table_tests\": 0.0}]", "name": "JinjaLogInfo", "pid": 51908, "thread": "MainThread", "ts": "2023-02-24T15:31:38.185955Z"}}

2023-02-24 18:31:39 — DEBUG — Unable to parse run-operation log message: 15:31:35  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
2023-02-24 18:31:39 — INFO — Running dbt --log-format json run-operation get_nodes_depends_on_nodes --args {"exclude_elementary": true} --project-dir /Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/monitor/dbt_project
2023-02-24 18:31:43 — DEBUG — Output: 15:31:40  target not specified in profile 'elementary', using 'default'
{"data": {"log_version": 3, "version": "=1.4.1"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "f060647a-23a1-4ac0-8783-8c9343333db1", "level": "info", "msg": "Running with dbt=1.4.1", "name": "MainReportVersion", "pid": 51914, "thread": "MainThread", "ts": "2023-02-24T15:31:41.096607Z"}}
{"data": {"msg": "Elementary: [{\"unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.fact_trips\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_fhv_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.fhv\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.dim_zones\", \"depends_on_nodes\": \"[\\\"seed.de_zoomcamp.taxi_zone_lookup\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.fact_trips\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.stg_green_trip_data\\\", \\\"model.de_zoomcamp.stg_yellow_trip_data\\\", \\\"model.de_zoomcamp.dim_zones\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.fact_fhv_trips\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.stg_fhv_trip_data\\\", \\\"model.de_zoomcamp.dim_zones\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.yellow\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.green\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"source.de_zoomcamp.staging.green\", \"depends_on_nodes\": null, \"type\": \"source\"}, {\"unique_id\": \"source.de_zoomcamp.staging.fhv\", \"depends_on_nodes\": null, \"type\": \"source\"}, {\"unique_id\": \"source.de_zoomcamp.staging.yellow\", \"depends_on_nodes\": null, \"type\": \"source\"}]"}, "info": {"category": "", "code": "M011", "extra": {}, "invocation_id": "f060647a-23a1-4ac0-8783-8c9343333db1", "level": "info", "msg": "Elementary: [{\"unique_id\": \"model.de_zoomcamp.dm_monthly_zone_revenue\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.fact_trips\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_fhv_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.fhv\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.dim_zones\", \"depends_on_nodes\": \"[\\\"seed.de_zoomcamp.taxi_zone_lookup\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.fact_trips\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.stg_green_trip_data\\\", \\\"model.de_zoomcamp.stg_yellow_trip_data\\\", \\\"model.de_zoomcamp.dim_zones\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.fact_fhv_trips\", \"depends_on_nodes\": \"[\\\"model.de_zoomcamp.stg_fhv_trip_data\\\", \\\"model.de_zoomcamp.dim_zones\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_yellow_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.yellow\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"model.de_zoomcamp.stg_green_trip_data\", \"depends_on_nodes\": \"[\\\"source.de_zoomcamp.staging.green\\\"]\", \"type\": \"model\"}, {\"unique_id\": \"source.de_zoomcamp.staging.green\", \"depends_on_nodes\": null, \"type\": \"source\"}, {\"unique_id\": \"source.de_zoomcamp.staging.fhv\", \"depends_on_nodes\": null, \"type\": \"source\"}, {\"unique_id\": \"source.de_zoomcamp.staging.yellow\", \"depends_on_nodes\": null, \"type\": \"source\"}]", "name": "JinjaLogInfo", "pid": 51914, "thread": "MainThread", "ts": "2023-02-24T15:31:42.871538Z"}}

2023-02-24 18:31:43 — DEBUG — Unable to parse run-operation log message: 15:31:40  target not specified in profile 'elementary', using 'default'
Traceback (most recent call last):
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 123, in run_operation
    log = DbtLog(json_message)
  File "/Users/fdr/SqlProjects/Datatalks/env/lib/python3.10/site-packages/elementary/clients/dbt/dbt_runner.py", line 16, in __init__
    log = json.loads(log_line)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/Cellar/python@3.10/3.10.6_2/Frameworks/Python.framework/Versions/3.10/lib/python3.10/json/decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 3 (char 2)
