{"creation_time": "2023-02-24T15:31:08+00:00", "days_back": 7, "models": {"model.de_zoomcamp.dm_monthly_zone_revenue": {"name": "dm_monthly_zone_revenue", "unique_id": "model.de_zoomcamp.dm_monthly_zone_revenue", "owners": [], "tags": [], "package_name": "de_zoomcamp", "description": "Aggregated table of all taxi trips corresponding to both service zones (Green and yellow) per pickup zone, month and service. The table contains monthly sums of the fare elements used to calculate the monthly revenue.  The table contains also monthly indicators like number of trips, and average trip distance. \n", "full_path": "models/core/dm_monthly_zone_revenue.sql", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "dm_monthly_zone_revenue", "model_name": "dm_monthly_zone_revenue", "normalized_full_path": "de_zoomcamp/models/core/dm_monthly_zone_revenue.sql", "artifact_type": "model"}, "model.de_zoomcamp.stg_fhv_trip_data": {"name": "stg_fhv_trip_data", "unique_id": "model.de_zoomcamp.stg_fhv_trip_data", "owners": [], "tags": [], "package_name": "de_zoomcamp", "description": "", "full_path": "models/staging/stg_fhv_trip_data.sql", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_fhv_trip_data", "model_name": "stg_fhv_trip_data", "normalized_full_path": "de_zoomcamp/models/staging/stg_fhv_trip_data.sql", "artifact_type": "model"}, "model.de_zoomcamp.dim_zones": {"name": "dim_zones", "unique_id": "model.de_zoomcamp.dim_zones", "owners": [], "tags": [], "package_name": "de_zoomcamp", "description": "List of unique zones idefied by locationid.  Includes the service zone they correspond to (Green or yellow).\n", "full_path": "models/core/dim_zones.sql", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "dim_zones", "model_name": "dim_zones", "normalized_full_path": "de_zoomcamp/models/core/dim_zones.sql", "artifact_type": "model"}, "model.de_zoomcamp.fact_trips": {"name": "fact_trips", "unique_id": "model.de_zoomcamp.fact_trips", "owners": [], "tags": [], "package_name": "de_zoomcamp", "description": "Taxi trips corresponding to both service zones (Green and yellow). The table contains records where both pickup and dropoff locations are valid and known zones.  Each record corresponds to a trip uniquely identified by tripid. \n", "full_path": "models/core/fact_trips.sql", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "fact_trips", "model_name": "fact_trips", "normalized_full_path": "de_zoomcamp/models/core/fact_trips.sql", "artifact_type": "model"}, "model.de_zoomcamp.fact_fhv_trips": {"name": "fact_fhv_trips", "unique_id": "model.de_zoomcamp.fact_fhv_trips", "owners": [], "tags": [], "package_name": "de_zoomcamp", "description": "", "full_path": "models/core/fact_fhv_trips.sql", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "fact_fhv_trips", "model_name": "fact_fhv_trips", "normalized_full_path": "de_zoomcamp/models/core/fact_fhv_trips.sql", "artifact_type": "model"}, "model.de_zoomcamp.stg_yellow_trip_data": {"name": "stg_yellow_trip_data", "unique_id": "model.de_zoomcamp.stg_yellow_trip_data", "owners": [], "tags": [], "package_name": "de_zoomcamp", "description": "Trips made by New York City's iconic yellow taxis.  Yellow taxis are the only vehicles permitted to respond to a street hail from a passenger in all five boroughs. They may also be hailed using an e-hail app like Curb or Arro. The records were collected and provided to the NYC Taxi and Limousine Commission (TLC) by technology service providers. \n", "full_path": "models/staging/stg_yellow_trip_data.sql", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_yellow_trip_data", "model_name": "stg_yellow_trip_data", "normalized_full_path": "de_zoomcamp/models/staging/stg_yellow_trip_data.sql", "artifact_type": "model"}, "model.de_zoomcamp.stg_green_trip_data": {"name": "stg_green_trip_data", "unique_id": "model.de_zoomcamp.stg_green_trip_data", "owners": [], "tags": [], "package_name": "de_zoomcamp", "description": "Trip made by green taxis, also known as boro taxis and street-hail liveries. Green taxis may respond to street hails,but only in the areas indicated in green on the map (i.e. above W 110 St/E 96th St in Manhattan and in the boroughs). The records were collected and provided to the NYC Taxi and Limousine Commission (TLC) by technology service providers. \n", "full_path": "models/staging/stg_green_trip_data.sql", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_green_trip_data", "model_name": "stg_green_trip_data", "normalized_full_path": "de_zoomcamp/models/staging/stg_green_trip_data.sql", "artifact_type": "model"}, "source.de_zoomcamp.staging.green": {"name": "green", "unique_id": "source.de_zoomcamp.staging.green", "owners": [], "tags": [], "package_name": "de_zoomcamp", "description": "", "full_path": "models/staging/schema.yaml", "database_name": "disco-bedrock-375516", "schema_name": "trips_data_all", "table_name": "green", "model_name": "green", "normalized_full_path": "de_zoomcamp/sources/staging/schema.yaml", "artifact_type": "source"}, "source.de_zoomcamp.staging.fhv": {"name": "fhv", "unique_id": "source.de_zoomcamp.staging.fhv", "owners": [], "tags": [], "package_name": "de_zoomcamp", "description": "", "full_path": "models/staging/schema.yaml", "database_name": "disco-bedrock-375516", "schema_name": "trips_data_all", "table_name": "fhv", "model_name": "fhv", "normalized_full_path": "de_zoomcamp/sources/staging/schema.yaml", "artifact_type": "source"}, "source.de_zoomcamp.staging.yellow": {"name": "yellow", "unique_id": "source.de_zoomcamp.staging.yellow", "owners": [], "tags": [], "package_name": "de_zoomcamp", "description": "", "full_path": "models/staging/schema.yaml", "database_name": "disco-bedrock-375516", "schema_name": "trips_data_all", "table_name": "yellow", "model_name": "yellow", "normalized_full_path": "de_zoomcamp/sources/staging/schema.yaml", "artifact_type": "source"}}, "sidebars": {"dbt": {"de_zoomcamp": {"models": {"core": {"__files__": ["model.de_zoomcamp.dm_monthly_zone_revenue", "model.de_zoomcamp.dim_zones", "model.de_zoomcamp.fact_trips", "model.de_zoomcamp.fact_fhv_trips"]}, "staging": {"__files__": ["model.de_zoomcamp.stg_fhv_trip_data", "model.de_zoomcamp.stg_yellow_trip_data", "model.de_zoomcamp.stg_green_trip_data"]}}, "sources": {"staging": {"schema.yaml": {}}}}}, "tags": {"No tags": ["model.de_zoomcamp.dm_monthly_zone_revenue", "model.de_zoomcamp.stg_fhv_trip_data", "model.de_zoomcamp.dim_zones", "model.de_zoomcamp.fact_trips", "model.de_zoomcamp.fact_fhv_trips", "model.de_zoomcamp.stg_yellow_trip_data", "model.de_zoomcamp.stg_green_trip_data", "source.de_zoomcamp.staging.green", "source.de_zoomcamp.staging.fhv", "source.de_zoomcamp.staging.yellow"]}, "owners": {"No owners": ["model.de_zoomcamp.dm_monthly_zone_revenue", "model.de_zoomcamp.stg_fhv_trip_data", "model.de_zoomcamp.dim_zones", "model.de_zoomcamp.fact_trips", "model.de_zoomcamp.fact_fhv_trips", "model.de_zoomcamp.stg_yellow_trip_data", "model.de_zoomcamp.stg_green_trip_data", "source.de_zoomcamp.staging.green", "source.de_zoomcamp.staging.fhv", "source.de_zoomcamp.staging.yellow"]}}, "invocation": {"invocation_id": null, "detected_at": null, "command": null, "selected": null, "full_refresh": null}, "test_results": {"model.de_zoomcamp.stg_green_trip_data": [{"metadata": {"test_unique_id": "test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9", "elementary_unique_id": "test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9.payment_type.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_green_trip_data", "column_name": "payment_type", "test_name": "accepted_values", "test_display_name": "Accepted Values", "latest_run_time": "2023-02-24T17:58:36+03:00", "latest_run_time_utc": "2023-02-24T14:58:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_green_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_green_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        payment_type as value_field,\n        count(*) as n_records\n\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    group by payment_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    1,2,3,4,5,6\n)", "test_params": {"values": "{{ var('payment_type_values') }}", "quote": false, "column_name": "payment_type", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        payment_type as value_field,\n        count(*) as n_records\n\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    group by payment_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    1,2,3,4,5,6\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": "{{ var('payment_type_values') }}", "quote": false, "column_name": "payment_type", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}}}, "test_results": {"display_name": "accepted_values", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1", "elementary_unique_id": "test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1.trip_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_green_trip_data", "column_name": "trip_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-02-24T17:58:47+03:00", "latest_run_time_utc": "2023-02-24T14:58:47+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_green_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_green_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select trip_id\nfrom `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\nwhere trip_id is null", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select trip_id\nfrom `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\nwhere trip_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b", "elementary_unique_id": "test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b.dropoff_location_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_green_trip_data", "column_name": "dropoff_location_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-02-24T17:58:56+03:00", "latest_run_time_utc": "2023-02-24T14:58:56+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_green_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_green_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select dropoff_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    where dropoff_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "dropoff_location_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select dropoff_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    where dropoff_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "dropoff_location_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}}}, "test_results": {"display_name": "relationships", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c", "elementary_unique_id": "test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c.pickup_location_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_green_trip_data", "column_name": "pickup_location_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-02-24T17:59:00+03:00", "latest_run_time_utc": "2023-02-24T14:59:00+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_green_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_green_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select pickup_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    where pickup_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "pickup_location_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select pickup_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    where pickup_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "pickup_location_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}}}, "test_results": {"display_name": "relationships", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184", "elementary_unique_id": "test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184.trip_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_green_trip_data", "column_name": "trip_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-02-24T17:59:15+03:00", "latest_run_time_utc": "2023-02-24T14:59:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_green_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_green_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with dbt_test__target as (\n\n  select trip_id as unique_field\n  from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n  where trip_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "with dbt_test__target as (\n\n  select trip_id as unique_field\n  from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n  where trip_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.de_zoomcamp.stg_yellow_trip_data": [{"metadata": {"test_unique_id": "test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad", "elementary_unique_id": "test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad.payment_type.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_yellow_trip_data", "column_name": "payment_type", "test_name": "accepted_values", "test_display_name": "Accepted Values", "latest_run_time": "2023-02-24T17:58:39+03:00", "latest_run_time_utc": "2023-02-24T14:58:39+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_yellow_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_yellow_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        payment_type as value_field,\n        count(*) as n_records\n\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    group by payment_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    1,2,3,4,5,6\n)", "test_params": {"values": "{{ var('payment_type_values') }}", "quote": false, "column_name": "payment_type", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        payment_type as value_field,\n        count(*) as n_records\n\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    group by payment_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    1,2,3,4,5,6\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": "{{ var('payment_type_values') }}", "quote": false, "column_name": "payment_type", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}}}, "test_results": {"display_name": "accepted_values", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04", "elementary_unique_id": "test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04.trip_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_yellow_trip_data", "column_name": "trip_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-02-24T17:58:51+03:00", "latest_run_time_utc": "2023-02-24T14:58:51+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_yellow_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_yellow_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select trip_id\nfrom `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\nwhere trip_id is null", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select trip_id\nfrom `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\nwhere trip_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337", "elementary_unique_id": "test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337.dropoff_location_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_yellow_trip_data", "column_name": "dropoff_location_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-02-24T17:59:04+03:00", "latest_run_time_utc": "2023-02-24T14:59:04+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_yellow_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_yellow_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select dropoff_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    where dropoff_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "dropoff_location_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select dropoff_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    where dropoff_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "dropoff_location_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}}}, "test_results": {"display_name": "relationships", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef", "elementary_unique_id": "test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef.pickup_location_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_yellow_trip_data", "column_name": "pickup_location_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-02-24T17:59:09+03:00", "latest_run_time_utc": "2023-02-24T14:59:09+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_yellow_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_yellow_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select pickup_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    where pickup_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "pickup_location_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select pickup_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    where pickup_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "pickup_location_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}}}, "test_results": {"display_name": "relationships", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af", "elementary_unique_id": "test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af.trip_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_yellow_trip_data", "column_name": "trip_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-02-24T17:59:20+03:00", "latest_run_time_utc": "2023-02-24T14:59:20+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_yellow_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_yellow_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with dbt_test__target as (\n\n  select trip_id as unique_field\n  from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n  where trip_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "with dbt_test__target as (\n\n  select trip_id as unique_field\n  from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n  where trip_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}}}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.de_zoomcamp.dm_monthly_zone_revenue": [{"metadata": {"test_unique_id": "test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41", "elementary_unique_id": "test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41.revenue_monthly_total_amount.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "dm_monthly_zone_revenue", "column_name": "revenue_monthly_total_amount", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-02-24T17:58:45+03:00", "latest_run_time_utc": "2023-02-24T14:58:45+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.dm_monthly_zone_revenue", "table_unique_id": "disco-bedrock-375516.dbt.dm_monthly_zone_revenue", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select revenue_monthly_total_amount\nfrom `disco-bedrock-375516`.`dbt`.`dm_monthly_zone_revenue`\nwhere revenue_monthly_total_amount is null", "test_params": {"column_name": "revenue_monthly_total_amount", "model": "{{ get_where_subquery(ref('dm_monthly_zone_revenue')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select revenue_monthly_total_amount\nfrom `disco-bedrock-375516`.`dbt`.`dm_monthly_zone_revenue`\nwhere revenue_monthly_total_amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "revenue_monthly_total_amount", "model": "{{ get_where_subquery(ref('dm_monthly_zone_revenue')) }}"}}}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}]}, "test_results_totals": {"model.de_zoomcamp.stg_green_trip_data": {"errors": 0, "warnings": 0, "passed": 5, "failures": 0}, "model.de_zoomcamp.stg_yellow_trip_data": {"errors": 0, "warnings": 0, "passed": 5, "failures": 0}, "model.de_zoomcamp.dm_monthly_zone_revenue": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}}, "test_runs": {"model.de_zoomcamp.stg_green_trip_data": [{"metadata": {"test_unique_id": "test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9", "elementary_unique_id": "test.de_zoomcamp.accepted_values_stg_green_trip_data_payment_type__False___var_payment_type_values_.4f221cc1e9.payment_type.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_green_trip_data", "column_name": "payment_type", "test_name": "accepted_values", "test_display_name": "Accepted Values", "latest_run_time": "2023-02-24T17:58:36+03:00", "latest_run_time_utc": "2023-02-24T14:58:36+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_green_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_green_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        payment_type as value_field,\n        count(*) as n_records\n\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    group by payment_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    1,2,3,4,5,6\n)", "test_params": {"values": "{{ var('payment_type_values') }}", "quote": false, "column_name": "payment_type", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        payment_type as value_field,\n        count(*) as n_records\n\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    group by payment_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    1,2,3,4,5,6\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": "{{ var('payment_type_values') }}", "quote": false, "column_name": "payment_type", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-02-24T14:58:36+00:00", "id": "796a1cfd-e639-48e0-8d02-933e514fa5e8", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1", "elementary_unique_id": "test.de_zoomcamp.not_null_stg_green_trip_data_trip_id.ec91791da1.trip_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_green_trip_data", "column_name": "trip_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-02-24T17:58:47+03:00", "latest_run_time_utc": "2023-02-24T14:58:47+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_green_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_green_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select trip_id\nfrom `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\nwhere trip_id is null", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select trip_id\nfrom `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\nwhere trip_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-02-24T14:58:47+00:00", "id": "796a1cfd-e639-48e0-8d02-933e514fa5e8", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b", "elementary_unique_id": "test.de_zoomcamp.relationships_stg_green_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.ff75841f2b.dropoff_location_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_green_trip_data", "column_name": "dropoff_location_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-02-24T17:58:56+03:00", "latest_run_time_utc": "2023-02-24T14:58:56+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_green_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_green_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select dropoff_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    where dropoff_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "dropoff_location_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select dropoff_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    where dropoff_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "dropoff_location_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-02-24T14:58:56+00:00", "id": "796a1cfd-e639-48e0-8d02-933e514fa5e8", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c", "elementary_unique_id": "test.de_zoomcamp.relationships_stg_green_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.36336aff5c.pickup_location_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_green_trip_data", "column_name": "pickup_location_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-02-24T17:59:00+03:00", "latest_run_time_utc": "2023-02-24T14:59:00+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_green_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_green_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select pickup_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    where pickup_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "pickup_location_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select pickup_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n    where pickup_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "pickup_location_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-02-24T14:59:00+00:00", "id": "796a1cfd-e639-48e0-8d02-933e514fa5e8", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184", "elementary_unique_id": "test.de_zoomcamp.unique_stg_green_trip_data_trip_id.e753166184.trip_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_green_trip_data", "column_name": "trip_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-02-24T17:59:15+03:00", "latest_run_time_utc": "2023-02-24T14:59:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_green_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_green_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with dbt_test__target as (\n\n  select trip_id as unique_field\n  from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n  where trip_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "with dbt_test__target as (\n\n  select trip_id as unique_field\n  from `disco-bedrock-375516`.`dbt`.`stg_green_trip_data`\n  where trip_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_green_trip_data')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-02-24T14:59:15+00:00", "id": "796a1cfd-e639-48e0-8d02-933e514fa5e8", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.de_zoomcamp.stg_yellow_trip_data": [{"metadata": {"test_unique_id": "test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad", "elementary_unique_id": "test.de_zoomcamp.accepted_values_stg_yellow_trip_data_payment_type__False___var_payment_type_values_.c618b604ad.payment_type.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_yellow_trip_data", "column_name": "payment_type", "test_name": "accepted_values", "test_display_name": "Accepted Values", "latest_run_time": "2023-02-24T17:58:39+03:00", "latest_run_time_utc": "2023-02-24T14:58:39+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_yellow_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_yellow_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        payment_type as value_field,\n        count(*) as n_records\n\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    group by payment_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    1,2,3,4,5,6\n)", "test_params": {"values": "{{ var('payment_type_values') }}", "quote": false, "column_name": "payment_type", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        payment_type as value_field,\n        count(*) as n_records\n\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    group by payment_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    1,2,3,4,5,6\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": "{{ var('payment_type_values') }}", "quote": false, "column_name": "payment_type", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-02-24T14:58:39+00:00", "id": "796a1cfd-e639-48e0-8d02-933e514fa5e8", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04", "elementary_unique_id": "test.de_zoomcamp.not_null_stg_yellow_trip_data_trip_id.b89512dd04.trip_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_yellow_trip_data", "column_name": "trip_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-02-24T17:58:51+03:00", "latest_run_time_utc": "2023-02-24T14:58:51+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_yellow_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_yellow_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select trip_id\nfrom `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\nwhere trip_id is null", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select trip_id\nfrom `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\nwhere trip_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-02-24T14:58:51+00:00", "id": "796a1cfd-e639-48e0-8d02-933e514fa5e8", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337", "elementary_unique_id": "test.de_zoomcamp.relationships_stg_yellow_trip_data_dropoff_location_id__location_id__ref_taxi_zone_lookup_.68f4352337.dropoff_location_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_yellow_trip_data", "column_name": "dropoff_location_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-02-24T17:59:04+03:00", "latest_run_time_utc": "2023-02-24T14:59:04+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_yellow_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_yellow_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select dropoff_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    where dropoff_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "dropoff_location_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select dropoff_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    where dropoff_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "dropoff_location_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-02-24T14:59:04+00:00", "id": "796a1cfd-e639-48e0-8d02-933e514fa5e8", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef", "elementary_unique_id": "test.de_zoomcamp.relationships_stg_yellow_trip_data_pickup_location_id__location_id__ref_taxi_zone_lookup_.a153780eef.pickup_location_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_yellow_trip_data", "column_name": "pickup_location_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2023-02-24T17:59:09+03:00", "latest_run_time_utc": "2023-02-24T14:59:09+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_yellow_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_yellow_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select pickup_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    where pickup_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "pickup_location_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select pickup_location_id as from_field\n    from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n    where pickup_location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from `disco-bedrock-375516`.`dbt`.`taxi_zone_lookup`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('taxi_zone_lookup')", "field": "location_id", "column_name": "pickup_location_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-02-24T14:59:09+00:00", "id": "796a1cfd-e639-48e0-8d02-933e514fa5e8", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af", "elementary_unique_id": "test.de_zoomcamp.unique_stg_yellow_trip_data_trip_id.c947aa39af.trip_id.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "stg_yellow_trip_data", "column_name": "trip_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2023-02-24T17:59:20+03:00", "latest_run_time_utc": "2023-02-24T14:59:20+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.stg_yellow_trip_data", "table_unique_id": "disco-bedrock-375516.dbt.stg_yellow_trip_data", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with dbt_test__target as (\n\n  select trip_id as unique_field\n  from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n  where trip_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "with dbt_test__target as (\n\n  select trip_id as unique_field\n  from `disco-bedrock-375516`.`dbt`.`stg_yellow_trip_data`\n  where trip_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "trip_id", "model": "{{ get_where_subquery(ref('stg_yellow_trip_data')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-02-24T14:59:20+00:00", "id": "796a1cfd-e639-48e0-8d02-933e514fa5e8", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}], "model.de_zoomcamp.dm_monthly_zone_revenue": [{"metadata": {"test_unique_id": "test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41", "elementary_unique_id": "test.de_zoomcamp.not_null_dm_monthly_zone_revenue_revenue_monthly_total_amount.34c3437d41.revenue_monthly_total_amount.generic", "database_name": "disco-bedrock-375516", "schema_name": "dbt", "table_name": "dm_monthly_zone_revenue", "column_name": "revenue_monthly_total_amount", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2023-02-24T17:58:45+03:00", "latest_run_time_utc": "2023-02-24T14:58:45+00:00", "latest_run_status": "pass", "model_unique_id": "model.de_zoomcamp.dm_monthly_zone_revenue", "table_unique_id": "disco-bedrock-375516.dbt.dm_monthly_zone_revenue", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select revenue_monthly_total_amount\nfrom `disco-bedrock-375516`.`dbt`.`dm_monthly_zone_revenue`\nwhere revenue_monthly_total_amount is null", "test_params": {"column_name": "revenue_monthly_total_amount", "model": "{{ get_where_subquery(ref('dm_monthly_zone_revenue')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select revenue_monthly_total_amount\nfrom `disco-bedrock-375516`.`dbt`.`dm_monthly_zone_revenue`\nwhere revenue_monthly_total_amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "revenue_monthly_total_amount", "model": "{{ get_where_subquery(ref('dm_monthly_zone_revenue')) }}"}}}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2023-02-24T14:58:45+00:00", "id": "796a1cfd-e639-48e0-8d02-933e514fa5e8", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}]}, "test_runs_totals": {"model.de_zoomcamp.stg_green_trip_data": {"errors": 0, "warnings": 0, "passed": 5, "failures": 0}, "model.de_zoomcamp.stg_yellow_trip_data": {"errors": 0, "warnings": 0, "passed": 5, "failures": 0}, "model.de_zoomcamp.dm_monthly_zone_revenue": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}}, "coverages": {"model.de_zoomcamp.stg_green_trip_data": {"table_tests": 0, "column_tests": 5}, "model.de_zoomcamp.stg_yellow_trip_data": {"table_tests": 0, "column_tests": 5}, "model.de_zoomcamp.dm_monthly_zone_revenue": {"table_tests": 0, "column_tests": 1}}, "model_runs": [], "model_runs_totals": {}, "filters": {"test_results": [{"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.de_zoomcamp.stg_yellow_trip_data", "model.de_zoomcamp.stg_green_trip_data", "model.de_zoomcamp.dm_monthly_zone_revenue"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["source.de_zoomcamp.staging.fhv", "source.de_zoomcamp.staging.green", "model.de_zoomcamp.dim_zones", "model.de_zoomcamp.fact_trips", "model.de_zoomcamp.fact_fhv_trips", "model.de_zoomcamp.stg_fhv_trip_data", "source.de_zoomcamp.staging.yellow"]}], "test_runs": [{"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.de_zoomcamp.stg_yellow_trip_data", "model.de_zoomcamp.stg_green_trip_data", "model.de_zoomcamp.dm_monthly_zone_revenue"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["source.de_zoomcamp.staging.fhv", "source.de_zoomcamp.staging.green", "model.de_zoomcamp.dim_zones", "model.de_zoomcamp.fact_trips", "model.de_zoomcamp.fact_fhv_trips", "model.de_zoomcamp.stg_fhv_trip_data", "source.de_zoomcamp.staging.yellow"]}], "model_runs": []}, "lineage": {"nodes": [{"id": "model.de_zoomcamp.dm_monthly_zone_revenue", "type": "model"}, {"id": "model.de_zoomcamp.stg_fhv_trip_data", "type": "model"}, {"id": "model.de_zoomcamp.dim_zones", "type": "model"}, {"id": "model.de_zoomcamp.fact_trips", "type": "model"}, {"id": "model.de_zoomcamp.fact_fhv_trips", "type": "model"}, {"id": "model.de_zoomcamp.stg_yellow_trip_data", "type": "model"}, {"id": "model.de_zoomcamp.stg_green_trip_data", "type": "model"}, {"id": "source.de_zoomcamp.staging.green", "type": "source"}, {"id": "source.de_zoomcamp.staging.fhv", "type": "source"}, {"id": "source.de_zoomcamp.staging.yellow", "type": "source"}], "edges": [["model.de_zoomcamp.dm_monthly_zone_revenue", "model.de_zoomcamp.fact_trips"], ["model.de_zoomcamp.fact_trips", "model.de_zoomcamp.stg_green_trip_data"], ["model.de_zoomcamp.fact_trips", "model.de_zoomcamp.stg_yellow_trip_data"], ["model.de_zoomcamp.fact_trips", "model.de_zoomcamp.dim_zones"], ["model.de_zoomcamp.stg_fhv_trip_data", "source.de_zoomcamp.staging.fhv"], ["model.de_zoomcamp.stg_green_trip_data", "source.de_zoomcamp.staging.green"], ["model.de_zoomcamp.stg_yellow_trip_data", "source.de_zoomcamp.staging.yellow"], ["model.de_zoomcamp.fact_fhv_trips", "model.de_zoomcamp.stg_fhv_trip_data"], ["model.de_zoomcamp.fact_fhv_trips", "model.de_zoomcamp.dim_zones"]]}, "tracking": {"posthog_api_key": "phc_56XBEzZmh02mGkadqLiYW51eECyYKWPyecVwkGdGUfg", "report_generator_anonymous_user_id": "d7f29600-441b-4d2e-a0ed-4525c2609d75", "anonymous_warehouse_id": "1edf2ce61b00cad890bcbd7775225f80e7e9775deacbf72504eaf95f35b7a8e5"}, "env": {"project_name": "de_zoomcamp", "env": "dev"}}