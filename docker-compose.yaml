version: '3'
services:
  ### Prefect Database
  database:
    image: postgres:15.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - 5432
    volumes: 
      - db:/var/lib/postgresql/data
    networks:
      - prefect
    profiles: ["server"]

  ### Prefect Server API and UI
  server:
    image: prefecthq/prefect:2.8.0-python3.11
    restart: always
    volumes:
      - prefect:/root/.prefect
    entrypoint: ["prefect", "orion", "start"]
    environment:
      - PREFECT_API_URL=${PREFECT_API_HOST}/api
      - PREFECT_ORION_API_HOST=0.0.0.0
      - PREFECT_ORION_DATABASE_CONNECTION_URL=postgresql+asyncpg://postgres:postgres@database:5432/prefect
    ports:
      - 4200:4200
    depends_on:
      - database
    networks:
      - prefect
    profiles: ["server"]

  ## Prefect Agent
  agent:
    image: prefecthq/prefect:2.8.0-python3.11
    restart: always
    entrypoint: ["prefect", "agent", "start", "-q", "YOUR_WORK_QUEUE_NAME"]
    environment:
      - PREFECT_API_URL=http://server:4200/api
    networks:
      - prefect
    profiles: ["agent"]

  ### Prefect CLI
  cli:
    image: prefecthq/prefect:2.8.0-python3.11
    entrypoint: "bash"
    working_dir: "/root/"
    volumes:
      - "./flows:/root/flows"
    environment:
      - PREFECT_API_URL=http://server:4200/api
    networks:
      - prefect
    profiles: ["cli"]

  ### Metabase DB
  metabase_db:
    image: postgres
    environment:
      - POSTGRES_DB=${MB_POSTGRES_DB}
      - POSTGRES_USER=${MB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGPORT=6432
    ports:
      - 6432:6432
    volumes:
      - mbdb:/var/lib/postgresql/data
    profiles: ["metabase"]

  ### Metabase_app
  metabase_app:
    image: metabase/metabase
    ports:
      - 3000:3000
    depends_on:
      - metabase_db
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=${MB_DB_DBNAME}
      - MB_DB_PORT=6432
      - MB_DB_USER=${MB_DB_USER}
      - MB_DB_PASS=${MB_DB_PASS}
      - MB_DB_HOST=metabase_db
    volumes:
      - metabase:/metabase-data
    profiles: ["metabase"]

  ### Dbt_docs
  dbt-docs:
    image: ghcr.io/dbt-labs/dbt-bigquery:1.4.0
    volumes:
      - ~/de-zoomcamp-2023/dbt/de_zoomcamp:/root/dbt/de_zoomcamp
      - ~/dbt_profiles:/root/.dbt
    working_dir: /root/dbt/de_zoomcamp
    environment:
      - DBT_PROFILES_DIR=/root/.dbt
      - DBT_PROFILE=de-zoomcamp
      - DBT_PROJECT_DIR=/root/dbt/de_zoomcamp
    ports:
      - 8080:8080
    entrypoint: ["dbt", "docs", "serve"]
    profiles: ["dbt-docs"]

  ### Dbt_tests
  dbt-elementary:
    image: nginx:alpine
    volumes:
      - "./dbt/de_zoomcamp/elementary:/usr/share/nginx/html"
    ports:
      - 8081:80
    profiles: ["dbt-elementary"]

  ### Kafka_broker
  kafka-broker:
    image: confluentinc/cp-kafka:7.2.0
    # hostname: broker
    # container_name: broker
    depends_on:
      - kafka-zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'kafka-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker:29092,PLAINTEXT_HOST://kafka-broker:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - kafka
    profiles: ["kafka"]
  
  ### Kafka Schema Registry
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.2.0
    # hostname: schema-registry
    # container_name: schema-registry
    depends_on:
      - kafka-zookeeper
      - kafka-broker
    ports:
      - "8081:8081"
    environment:
      # SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181" #(depreciated)
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-broker:29092"
      SCHEMA_REGISTRY_HOST_NAME: "localhost"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081" #(default: http://0.0.0.0:8081)
    networks:
      - kafka
    profiles: ["kafka"]
  
  ### Kafka Zookeeper
  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    # hostname: zookeeper
    # container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka
    profiles: ["kafka"]
  
  ### Kafka Control Center
  kafka-control-center:
    image: confluentinc/cp-enterprise-control-center:7.2.0
    # hostname: control-center
    # container_name: control-center
    depends_on:
      - kafka-zookeeper
      - kafka-broker
      - kafka-schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'kafka-zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://localhost:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - kafka
    profiles: ["kafka"]

  ### Kafka API
  kafka-rest:
    image: confluentinc/cp-kafka-rest:7.2.0
    # hostname: kafka-rest
    ports:
      - "8082:8082"
    depends_on:
      - kafka-schema-registry
      - kafka-broker
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
      KAFKA_REST_ZOOKEEPER_CONNECT: 'kafka-zookeeper:2181'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://localhost:8081'
      KAFKA_REST_HOST_NAME: localhost
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'
    networks:
      - kafka
    profiles: ["kafka"]


volumes:
  prefect:
  db:
  mbdb:
  metabase:
networks:
  prefect:
    name: prefect-network
  kafka:
    name: kafka-network